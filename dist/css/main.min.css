.wrapper{margin:0 auto;max-width:1400px;width:100%;padding:0 2em}.accent{color:#0487db}.link-animation{position:relative}.link-animation:after,.link-animation:before{content:"";transition:.3s;position:absolute;width:0;bottom:0;border-bottom:4px solid #0487db}.link-animation:before{left:50%}.link-animation:after{right:50%}.link-animation:hover:after,.link-animation:hover:before{width:40%}.section-padding{padding:5em 0}.section-title{padding-bottom:1em;text-transform:uppercase;font-family:Orbitron,sans-serif;font-size:3.6rem;text-align:center}.three-columns{display:grid;grid-template-columns:repeat(2,1fr);grid-template-rows:repeat(3,1fr);row-gap:4em;column-gap:1em}.three-columns__column--one{grid-row:1/2;grid-column:1/3}.three-columns__column--two{grid-row:2/3;grid-column:1/3}.three-columns__column--three{grid-row:3/4;grid-column:1/3}@media (min-width:576px){.section-padding{padding:6em 0}.section-title{font-size:4.5rem}}@media (min-width:768px){.three-columns{grid-template-rows:repeat(2,1fr)}.three-columns__column--one{grid-row:1/2;grid-column:1/2}.three-columns__column--two{grid-row:1/2;grid-column:2/3}.three-columns__column--three{grid-row:2/4;grid-column:1/3}}@media (min-width:992px){.section-padding{padding:7em 0}.section-title{font-size:4.8rem;font-weight:600}.three-columns{grid-template-columns:repeat(3,1fr);grid-template-rows:repeat(1,1fr)}.three-columns__column--one{grid-row:1/2;grid-column:1/2}.three-columns__column--two{grid-row:1/2;grid-column:2/3}.three-columns__column--three{grid-row:1/2;grid-column:3/4}}@keyframes a{0%{max-height:var(--lineHeight)}to{max-height:calc(var(--lineHeight) * var(--lines))}}@keyframes b{0%{top:0}to{top:calc(var(--lineHeight) * var(--lines))}}@keyframes c{0%{width:100%}to{width:0}}@keyframes d{0%{color:var(--bgColor)}to{color:#000}}.typewriter{--bgColor:none;--lines:800;--lineHeight:11.7rem;--timePerLine:5s;--widthCh:19;--width:calc(var(--widthCh) * 1ch);--time:calc(var(--lines) * var(--timePerLine));animation:a var(--time) steps(var(--lines));animation-fill-mode:forwards;background:var(--bgColor);line-height:var(--lineHeight);max-height:var(--lineHeight);overflow:hidden;position:relative;width:var(--width)}.typewriter:before{content:"";animation:c var(--timePerLine) linear infinite,b var(--time) steps(var(--lines)) var(--lines),d .5s steps(2) infinite;background:var(--bgColor);border-left:2px solid;bottom:0;height:11rem;position:absolute;right:0;width:100%}.typewriter.big-caret:before{border-left-width:.5ch}.typewriter.monospace{width:100%}.typewriter.monospace:before{animation:c var(--timePerLine) steps(var(--widthCh)) infinite,b var(--time) steps(var(--lines)) var(--lines),d .5s steps(2) infinite}section{box-sizing:border-box;display:flex;justify-content:space-between;left:0;padding:1rem;top:1rem;width:100%}section:nth-child(2){top:10rem}section:nth-child(3){top:20rem}.lorem{--widthCh:60;--timePerLine:6s}*,:after,:before{box-sizing:border-box;margin:0;padding:0}html{font-size:62.5%;scroll-behavior:smooth}body{font-family:Montserrat,sans-serif;font-family:Orbitron,sans-serif;font-size:1.6rem;color:#fff}.header{background:linear-gradient(180deg,rgba(11,31,58,.85) 39.06%,rgba(14,26,48,.85) 98.44%),url(../../dist/img/hero-bg.png);height:100vh;position:relative;background-position:50%;background-size:cover;overflow:hidden;background-attachment:fixed}.header__icons{display:none;justify-content:flex-end;padding-right:1em}.header__icons a{color:#fff;padding:1.2em 0 0 1em}.header__icons i{font-size:2.2rem;transition:color .3s}.header__icons i:hover{color:#0487db}.header__top{padding-top:2em;display:flex;justify-content:space-between;align-items:baseline}.header__top-btn{font-size:2.7rem;background:none;border:none;color:#fff;z-index:2}.header__top-logo{text-decoration:none;display:flex;align-items:center;font-family:Orbitron;text-transform:uppercase;color:#fff}.header__top-logo h1,.header__top-logo i{font-size:1.8rem}.header__top-logo i{padding-right:.5em}.header__bottom{width:100%;height:90vh;display:flex;flex-direction:column;justify-content:center;align-items:center;font-family:Montserrat,sans-serif}.header__bottom-heading{color:#fff;text-align:center;text-transform:uppercase;font-size:3.6rem}.header__bottom-text{color:#fff;padding:2em 0;font-size:2rem;text-align:center}.header__bottom-btn{color:#fff;text-transform:uppercase;text-decoration:none;border:3px solid #fff;padding:.4em 2em;border-radius:5px;transition:background .3s,color .3s}.header__bottom-btn:hover{background:#fff;color:#525050}.header__arrows{position:absolute;bottom:5%;right:50%;transform:translateX(-50%);font-size:3rem;animation:e 1.5s infinite}@keyframes e{0%{transform:translateY(5px)}50%{transform:translateY(-5px)}to{transform:translateY(5px)}}.nav-mobile{background-color:#0b1f3a;width:100%;height:100vh;position:absolute;top:0;left:0;display:flex;justify-content:center;align-items:center;position:fixed;transform:translateX(-100%);transition:transform .3s ease-in}.nav-mobile--active{transform:translateX(0)}.nav-mobile__list{display:flex;flex-direction:column}.nav-mobile__list-item{font-size:3.2rem;text-transform:uppercase;text-decoration:none;color:#fff;text-align:center;padding:.7em 0}.nav-desktop{display:none}.nav-desktop__list-item{color:#fff;text-transform:uppercase;font-size:2rem;text-decoration:none;padding:.5em .7em;cursor:pointer}.about{background-color:#2b2a2a;font-family:Montserrat,sans-serif;font-size:1.6rem;text-align:center}.about__text{padding-bottom:1.5em}.about i{font-size:10rem;padding-top:.3em}.skills{background:linear-gradient(180deg,rgba(67,67,67,.95) 39.06%,rgba(68,68,68,.95) 98.44%),url(../../dist/img/skills-bg.png);background-position:50%;background-size:cover;background-attachment:fixed}.skills__boxes{background-color:hsla(0,0%,100%,.65);border-radius:7px;display:flex;flex-direction:column;padding:3em 2em}.skills__box{background-color:#000;border-radius:7px;padding:1em 1.5em;margin:.5em 0;font-size:2.2rem;font-weight:700;text-transform:uppercase;text-align:center;font-family:Montserrat,sans-serif;cursor:pointer;transition:transform .3s}.skills__box:hover{transform:scale(1.05)}.projects{background-color:#525050}.projects__subtitle{background-color:#000;text-align:center;border-radius:7px;padding:.8em 1.2em;margin:2em 0 .5em;font-size:1.8rem;font-weight:700;text-transform:uppercase;font-family:Montserrat,sans-serif}.projects__boxes{padding:2.5em 0 4em}.projects__box{position:relative;height:260px;max-width:410px;width:100%;perspective:800px;cursor:pointer;justify-self:center}.projects__box-text{font-family:Montserrat,sans-serif;font-size:2.2rem;font-weight:400;padding:.5em .2em}.projects__box:hover .projects__box-behind{transform:rotate(0);opacity:1}.projects__box:hover .projects__box-img{transform:rotateY(-180deg);opacity:1}.projects__box:hover .projects__box-btn{transform:rotateY(180deg);opacity:1;transition:.8s}.projects__box-img{width:100%;height:100%;transition:.8s}.projects__box-img--one{background:url(../../dist/img/projects1.png);background-size:cover;background-position:50%;border-radius:8px}.projects__box-img--two{background:url(../../dist/img/projects2.png);background-size:cover;background-position:50%;border-radius:8px}.projects__box-img--three{background:url(../../dist/img/projects3.png);background-size:cover;background-position:50%;border-radius:8px}.projects__box-img--four{background:url(../../dist/img/projects4.png);background-size:cover;background-position:50%;border-radius:8px}.projects__box-img--five{background:url(../../dist/img/projects5.png);background-size:cover;background-position:50%;border-radius:8px}.projects__box-img--six{background:url(../../dist/img/projects6.png);background-size:cover;background-position:50%;border-radius:8px}.projects__box-img--seven{background:url(../../dist/img/projects7.png);background-size:cover;background-position:50%;border-radius:8px}.projects__box-img--eight{background:url(../../dist/img/projects8.png);background-size:cover;background-position:50%;border-radius:8px}.projects__box-img--nine{background:url(../../dist/img/projects9.png);background-size:cover;background-position:50%;border-radius:8px}.projects__box-btn{position:absolute;top:10px;right:10px;padding:1em;background:none;border:none;color:#fff;font-size:2.6rem;text-shadow:1px 1px 5px #000;cursor:pointer;z-index:1;transition:.8s}.projects__box-behind{position:absolute;top:0;bottom:0;right:0;left:0;padding:3em;background:#f2f0f0;background-image:linear-gradient(135deg,#f5f7fa,#c3cfe2);border-radius:8px;text-align:center;transition:.8s;opacity:0;transform:rotateY(-180deg);color:#000;display:flex;flex-direction:column;justify-content:center;align-items:center}.projects__box-link{padding:.5em 0;color:#000;text-decoration:none;font-size:2.2rem;font-family:Montserrat,sans-serif}.projects__box-link:hover{text-decoration:underline}.footer{background:#2e2e2e;font-family:Montserrat,sans-serif}.footer .three-columns{grid-template-rows:repeat(2,1fr)}.footer__boxes .three-columns__column--two{max-width:400px;width:100%}.footer__boxes .three-columns__column--three{display:none}.footer__box{justify-self:center}.footer__box-heading{text-transform:uppercase;font-size:2.4rem;font-weight:700;padding-bottom:1.5em}.footer__box-row{display:flex;align-items:center;padding:.5em 0;transition:color .3s;cursor:pointer;text-decoration:none;color:#fff}.footer__box-row:hover{color:#0487db}.footer__box-row i{font-size:2.6rem;padding-right:.8em}.footer__box-text{padding:.5em 0}@media (min-width:576px){.header h1,.header i{font-size:2.5rem}.header__bottom-heading{font-size:5rem}.header__bottom-text{font-size:2.8rem}.header__bottom-btn{padding:.7em 3em;font-weight:600}.skills__boxes{flex-direction:row;flex-wrap:wrap;justify-content:center}.skills__box{margin:.5em;font-size:2.6rem;padding:.5em 1em}.projects__subtitle{font-size:2.4rem;font-weight:700;padding:.5em .8em}}@media (min-width:768px){.header__bottom-heading{font-size:6.7rem}.header__bottom-text{font-size:3rem}.footer .three-columns{grid-template-rows:repeat(1,1fr)}}@media (min-width:992px){.header__icons{display:flex}.header__bottom-heading{font-size:8rem;max-width:900px}.header__bottom-text{font-size:3.8rem;padding:1em 0}.header__bottom-btn{padding:.4em 2.2em;font-weight:600;font-size:2.4rem}.header__top{padding-top:.5em}.header__top-btn{display:none}.nav-desktop{display:block}.about{padding-bottom:4em}.about__text{padding-bottom:2em;font-size:1.8rem}.about i{font-size:15rem}.skills__box{margin:.5em;font-size:3.6rem;padding:.2em .3em}.projects__subtitle{width:-moz-fit-content;width:fit-content}.footer{padding:5em 0}.footer .three-columns__column--three{display:block;justify-self:center}.footer__box{justify-self:flex-start}}@media (min-width:1200px){.header__top-logo h1,.header__top-logo i{font-size:3.2rem}.header__bottom-heading{font-size:9rem;max-width:992px}.header__bottom-text{font-size:4.8rem}.nav-desktop__list-item{font-size:2.6rem;padding:.5em .7em}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMuc2NzcyIsIm1haW4uY3NzIiwiY29sb3JzLnNjc3MiLCJhbmltYXRlZC10ZXh0LnNjc3MiLCJtYWluLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsU0FDSSxjQUFBLEFBQ0EsaUJBQUEsQUFDQSxXQUFBLEFBQ0EsYUFBQSxDQ0RKLEFESUEsUUFDSSxhRVRXLENEUWYsQURJQSxnQkFDSSxpQkFBQSxDQ0RKLEFER0ksNkNBQ0ksV0FBQSxBQUNBLGVBQUEsQUFDQSxrQkFBQSxBQUNBLFFBQUEsQUFDQSxTQUFBLEFBQ0EsK0JBQUEsQ0NEUixBRElJLHVCQUNJLFFBQUEsQ0NGUixBREtJLHNCQUNJLFNBQUEsQ0NIUixBRE1JLHlEQUNJLFNBQUEsQ0NKUixBRFFBLGlCQUNJLGFBQUEsQ0NMSixBRFFBLGVBQ0ksbUJBQUEsQUFDQSx5QkFBQSxBQUNBLGdDQUFBLEFBQ0EsaUJBQUEsQUFDQSxpQkFBQSxDQ0xKLEFEUUEsZUFDSSxhQUFBLEFBQ0Esb0NBQUEsQUFDQSxpQ0FBQSxBQUNBLFlBQUEsQUFDQSxjQUFBLENDTEosQURRUSw0QkFDSSxhQUFBLEFBQ0EsZUFBQSxDQ05aLEFEU1EsNEJBQ0ksYUFBQSxBQUNBLGVBQUEsQ0NQWixBRFVRLDhCQUNJLGFBQUEsQUFDQSxlQUFBLENDUlosQURpQkEseUJBRUksaUJBQ0ksYUFBQSxDQ2ZOLEFEaUJFLGVBQ0ksZ0JBQUEsQ0NkTixDQUNGLEFEb0JBLHlCQUVJLGVBQ0ksZ0NBQUEsQ0NuQk4sQURzQlUsNEJBQ0ksYUFBQSxBQUNBLGVBQUEsQ0NwQmQsQUR1QlUsNEJBQ0ksYUFBQSxBQUNBLGVBQUEsQ0NyQmQsQUR3QlUsOEJBQ0ksYUFBQSxBQUNBLGVBQUEsQ0N0QmQsQ0FDRixBRCtCQSx5QkFDSSxpQkFDSSxhQUFBLENDN0JOLEFEK0JFLGVBQ0ksaUJBQUEsQUFDQSxlQUFBLENDNUJOLEFEK0JFLGVBQ0ksb0NBQUEsQUFDQSxnQ0FBQSxDQzVCTixBRCtCVSw0QkFDSSxhQUFBLEFBQ0Es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b250ZW50IjpbIkBpbXBvcnQgJy4vY29sb3JzJztcclxuXHJcbi53cmFwcGVyIHtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgbWF4LXdpZHRoOiAxNDAwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDAgMmVtO1xyXG59XHJcblxyXG4uYWNjZW50IHtcclxuICAgIGNvbG9yOiAkYWNjZW50LWNvbG9yO1xyXG59XHJcblxyXG4ubGluay1hbmltYXRpb24ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgICY6OmFmdGVyLCAmOjpiZWZvcmUge1xyXG4gICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIHRyYW5zaXRpb246IC4zcztcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgd2lkdGg6IDA7XHJcbiAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgIGJvcmRlci1ib3R0b206IDRweCBzb2xpZCAkYWNjZW50LWNvbG9yO1xyXG4gICAgfVxyXG5cclxuICAgICY6OmJlZm9yZSB7XHJcbiAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgfVxyXG5cclxuICAgICY6OmFmdGVyIHtcclxuICAgICAgICByaWdodDogNTAlO1xyXG4gICAgfVxyXG5cclxuICAgICY6aG92ZXI6OmJlZm9yZSwgJjpob3Zlcjo6YWZ0ZXIge1xyXG4gICAgICAgIHdpZHRoOiA0MCU7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5zZWN0aW9uLXBhZGRpbmcge1xyXG4gICAgcGFkZGluZzogNWVtIDA7XHJcbn1cclxuXHJcbi5zZWN0aW9uLXRpdGxlIHtcclxuICAgIHBhZGRpbmctYm90dG9tOiAxZW07XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgZm9udC1mYW1pbHk6ICdPcmJpdHJvbicsIHNhbnMtc2VyaWY7XHJcbiAgICBmb250LXNpemU6IDMuNnJlbTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLnRocmVlLWNvbHVtbnMge1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XHJcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgzLCAxZnIpO1xyXG4gICAgcm93LWdhcDogNGVtO1xyXG4gICAgY29sdW1uLWdhcDogMWVtO1xyXG5cclxuICAgICZfX2NvbHVtbiB7XHJcbiAgICAgICAgJi0tb25lIHtcclxuICAgICAgICAgICAgZ3JpZC1yb3c6IDEvMjtcclxuICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDEvMztcclxuICAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICAmLS10d28ge1xyXG4gICAgICAgICAgICBncmlkLXJvdzogMi8zO1xyXG4gICAgICAgICAgICBncmlkLWNvbHVtbjogMS8zO1xyXG4gICAgXHJcbiAgICAgICAgfVxyXG4gICAgICAgICYtLXRocmVlIHtcclxuICAgICAgICAgICAgZ3JpZC1yb3c6IDMvNDtcclxuICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDEvMztcclxuICAgIFxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuXHJcbi8vIE1FRElBIFxyXG5cclxuQG1lZGlhKG1pbi13aWR0aDogNTc2cHgpIHtcclxuXHJcbiAgICAuc2VjdGlvbi1wYWRkaW5nIHtcclxuICAgICAgICBwYWRkaW5nOiA2ZW0gMDtcclxuICAgIH1cclxuICAgIC5zZWN0aW9uLXRpdGxlIHtcclxuICAgICAgICBmb250LXNpemU6IDQuNXJlbTtcclxuICAgIH1cclxuXHJcbiAgICBcclxufVxyXG5cclxuXHJcbkBtZWRpYShtaW4td2lkdGg6IDc2OHB4KSB7XHJcblxyXG4gICAgLnRocmVlLWNvbHVtbnMge1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDIsIDFmcik7XHJcblxyXG4gICAgICAgICZfX2NvbHVtbiB7XHJcbiAgICAgICAgICAgICYtLW9uZSB7XHJcbiAgICAgICAgICAgICAgICBncmlkLXJvdzogMS8yO1xyXG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDEvMjtcclxuICAgICAgICBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAmLS10d28ge1xyXG4gICAgICAgICAgICAgICAgZ3JpZC1yb3c6IDEvMjtcclxuICAgICAgICAgICAgICAgIGdyaWQtY29sdW1uOiAyLzM7XHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJi0tdGhyZWUge1xyXG4gICAgICAgICAgICAgICAgZ3JpZC1yb3c6IDIvNDtcclxuICAgICAgICAgICAgICAgIGdyaWQtY29sdW1uOiAxLzM7XHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxufVxyXG5cclxuXHJcbkBtZWRpYShtaW4td2lkdGg6IDk5MnB4KSB7XHJcbiAgICAuc2VjdGlvbi1wYWRkaW5nIHtcclxuICAgICAgICBwYWRkaW5nOiA3ZW0gMDtcclxuICAgIH1cclxuICAgIC5zZWN0aW9uLXRpdGxlIHtcclxuICAgICAgICBmb250LXNpemU6IDQuOHJlbTtcclxuICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgfVxyXG5cclxuICAgIC50aHJlZS1jb2x1bW5zIHtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgzLCAxZnIpO1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDEsIDFmcik7XHJcblxyXG4gICAgICAgICZfX2NvbHVtbiB7XHJcbiAgICAgICAgICAgICYtLW9uZSB7XHJcbiAgICAgICAgICAgICAgICBncmlkLXJvdzogMS8yO1xyXG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDEvMjtcclxuICAgICAgICBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAmLS10d28ge1xyXG4gICAgICAgICAgICAgICAgZ3JpZC1yb3c6IDEvMjtcclxuICAgICAgICAgICAgICAgIGdyaWQtY29sdW1uOiAyLzM7XHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJi0tdGhyZWUge1xyXG4gICAgICAgICAgICAgICAgZ3JpZC1yb3c6IDEvMjtcclxuICAgICAgICAgICAgICAgIGdyaWQtY29sdW1uOiAzLzQ7XHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5cclxuQG1lZGlhKG1pbi13aWR0aDogMTIwMHB4KSB7XHJcblxyXG59XHJcblxyXG4iLCIud3JhcHBlciB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBtYXgtd2lkdGg6IDE0MDBweDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDAgMmVtO1xufVxuXG4uYWNjZW50IHtcbiAgY29sb3I6ICMwNDg3REI7XG59XG5cbi5saW5rLWFuaW1hdGlvbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi5saW5rLWFuaW1hdGlvbjo6YWZ0ZXIsIC5saW5rLWFuaW1hdGlvbjo6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgdHJhbnNpdGlvbjogMC4zcztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMDtcbiAgYm90dG9tOiAwO1xuICBib3JkZXItYm90dG9tOiA0cHggc29saWQgIzA0ODdEQjtcbn1cbi5saW5rLWFuaW1hdGlvbjo6YmVmb3JlIHtcbiAgbGVmdDogNTAlO1xufVxuLmxpbmstYW5pbWF0aW9uOjphZnRlciB7XG4gIHJpZ2h0OiA1MCU7XG59XG4ubGluay1hbmltYXRpb246aG92ZXI6OmJlZm9yZSwgLmxpbmstYW5pbWF0aW9uOmhvdmVyOjphZnRlciB7XG4gIHdpZHRoOiA0MCU7XG59XG5cbi5zZWN0aW9uLXBhZGRpbmcge1xuICBwYWRkaW5nOiA1ZW0gMDtcbn1cblxuLnNlY3Rpb24tdGl0bGUge1xuICBwYWRkaW5nLWJvdHRvbTogMWVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LWZhbWlseTogXCJPcmJpdHJvblwiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDMuNnJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4udGhyZWUtY29sdW1ucyB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XG4gIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDMsIDFmcik7XG4gIHJvdy1nYXA6IDRlbTtcbiAgY29sdW1uLWdhcDogMWVtO1xufVxuLnRocmVlLWNvbHVtbnNfX2NvbHVtbi0tb25lIHtcbiAgZ3JpZC1yb3c6IDEvMjtcbiAgZ3JpZC1jb2x1bW46IDEvMztcbn1cbi50aHJlZS1jb2x1bW5zX19jb2x1bW4tLXR3byB7XG4gIGdyaWQtcm93OiAyLzM7XG4gIGdyaWQtY29sdW1uOiAxLzM7XG59XG4udGhyZWUtY29sdW1uc19fY29sdW1uLS10aHJlZSB7XG4gIGdyaWQtcm93OiAzLzQ7XG4gIGdyaWQtY29sdW1uOiAxLzM7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkge1xuICAuc2VjdGlvbi1wYWRkaW5nIHtcbiAgICBwYWRkaW5nOiA2ZW0gMDtcbiAgfVxuXG4gIC5zZWN0aW9uLXRpdGxlIHtcbiAgICBmb250LXNpemU6IDQuNXJlbTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC50aHJlZS1jb2x1bW5zIHtcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgyLCAxZnIpO1xuICB9XG4gIC50aHJlZS1jb2x1bW5zX19jb2x1bW4tLW9uZSB7XG4gICAgZ3JpZC1yb3c6IDEvMjtcbiAgICBncmlkLWNvbHVtbjogMS8yO1xuICB9XG4gIC50aHJlZS1jb2x1bW5zX19jb2x1bW4tLXR3byB7XG4gICAgZ3JpZC1yb3c6IDEvMjtcbiAgICBncmlkLWNvbHVtbjogMi8zO1xuICB9XG4gIC50aHJlZS1jb2x1bW5zX19jb2x1bW4tLXRocmVlIHtcbiAgICBncmlkLXJvdzogMi80O1xuICAgIGdyaWQtY29sdW1uOiAxLzM7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAuc2VjdGlvbi1wYWRkaW5nIHtcbiAgICBwYWRkaW5nOiA3ZW0gMDtcbiAgfVxuXG4gIC5zZWN0aW9uLXRpdGxlIHtcbiAgICBmb250LXNpemU6IDQuOHJlbTtcbiAgICBmb250LXdlaWdodDogNjAwO1xuICB9XG5cbiAgLnRocmVlLWNvbHVtbnMge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDMsIDFmcik7XG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoMSwgMWZyKTtcbiAgfVxuICAudGhyZWUtY29sdW1uc19fY29sdW1uLS1vbmUge1xuICAgIGdyaWQtcm93OiAxLzI7XG4gICAgZ3JpZC1jb2x1bW46IDEvMjtcbiAgfVxuICAudGhyZWUtY29sdW1uc19fY29sdW1uLS10d28ge1xuICAgIGdyaWQtcm93OiAxLzI7XG4gICAgZ3JpZC1jb2x1bW46IDIvMztcbiAgfVxuICAudGhyZWUtY29sdW1uc19fY29sdW1uLS10aHJlZSB7XG4gICAgZ3JpZC1yb3c6IDEvMjtcbiAgICBncmlkLWNvbHVtbjogMy80O1xuICB9XG59XG5Aa2V5ZnJhbWVzIGdyb3cge1xuICAwJSB7XG4gICAgbWF4LWhlaWdodDogdmFyKC0tbGluZUhlaWdodCk7XG4gIH1cbiAgMTAwJSB7XG4gICAgbWF4LWhlaWdodDogY2FsYyh2YXIoLS1saW5lSGVpZ2h0KSAqIHZhcigtLWxpbmVzKSk7XG4gIH1cbn1cbkBrZXlmcmFtZXMgY2FycmlhZ2VSZXR1cm4ge1xuICAwJSB7XG4gICAgdG9wOiAwO1xuICB9XG4gIDEwMCUge1xuICAgIHRvcDogY2FsYyh2YXIoLS1saW5lSGVpZ2h0KSAqIHZhcigtLWxpbmVzKSk7XG4gIH1cbn1cbkBrZXlmcmFtZXMgdHlwZSB7XG4gIDAlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICAxMDAlIHtcbiAgICB3aWR0aDogMCU7XG4gIH1cbn1cbkBrZXlmcmFtZXMgY2FyZXQge1xuICAwJSB7XG4gICAgY29sb3I6IHZhcigtLWJnQ29sb3IpO1xuICB9XG4gIDEwMCUge1xuICAgIGNvbG9yOiBibGFjaztcbiAgfVxufVxuLnR5cGV3cml0ZXIge1xuICAtLWJnQ29sb3I6IG5vbmU7XG4gIC0tbGluZXM6IDgwMDtcbiAgLS1saW5lSGVpZ2h0OiAxMS43cmVtO1xuICAtLXRpbWVQZXJMaW5lOiA1cztcbiAgLS13aWR0aENoOiAxOTtcbiAgLS13aWR0aDogY2FsYyh2YXIoLS13aWR0aENoKSAqIDFjaCk7XG4gIC8qIGRvIG5vdCB0b3VjaCB0aGUgdGltZSBwcm9wZXJ0eSEhISAqL1xuICAtLXRpbWU6IGNhbGModmFyKC0tbGluZXMpICogdmFyKC0tdGltZVBlckxpbmUpKTtcbiAgYW5pbWF0aW9uOiBncm93IHZhcigtLXRpbWUpIHN0ZXBzKHZhcigtLWxpbmVzKSk7XG4gIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1iZ0NvbG9yKTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWxpbmVIZWlnaHQpO1xuICBtYXgtaGVpZ2h0OiB2YXIoLS1saW5lSGVpZ2h0KTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogdmFyKC0td2lkdGgpO1xuICAvKiB3b3JkLWJyZWFrOiBicmVhay1hbGw7ICovXG59XG5cbi50eXBld3JpdGVyOjpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBhbmltYXRpb246IHR5cGUgdmFyKC0tdGltZVBlckxpbmUpIGxpbmVhciBpbmZpbml0ZSwgY2FycmlhZ2VSZXR1cm4gdmFyKC0tdGltZSkgc3RlcHModmFyKC0tbGluZXMpKSB2YXIoLS1saW5lcyksIGNhcmV0IDAuNXMgc3RlcHMoMikgaW5maW5pdGU7XG4gIGJhY2tncm91bmQ6IHZhcigtLWJnQ29sb3IpO1xuICBib3JkZXItbGVmdDogMnB4IHNvbGlkO1xuICBib3R0b206IDA7XG4gIGhlaWdodDogMTFyZW07XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4udHlwZXdyaXRlci5iaWctY2FyZXQ6OmJlZm9yZSB7XG4gIGJvcmRlci1sZWZ0LXdpZHRoOiAwLjVjaDtcbn1cblxuLnR5cGV3cml0ZXIubW9ub3NwYWNlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi50eXBld3JpdGVyLm1vbm9zcGFjZTo6YmVmb3JlIHtcbiAgYW5pbWF0aW9uOiB0eXBlIHZhcigtLXRpbWVQZXJMaW5lKSBzdGVwcyh2YXIoLS13aWR0aENoKSkgaW5maW5pdGUsIGNhcnJpYWdlUmV0dXJuIHZhcigtLXRpbWUpIHN0ZXBzKHZhcigtLWxpbmVzKSkgdmFyKC0tbGluZXMpLCBjYXJldCAwLjVzIHN0ZXBzKDIpIGluZmluaXRlO1xufVxuXG4vKiBERU1PICovXG5zZWN0aW9uIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBsZWZ0OiAwO1xuICBwYWRkaW5nOiAxcmVtO1xuICB0b3A6IDFyZW07XG4gIHdpZHRoOiAxMDAlO1xufVxuXG5zZWN0aW9uOm50aC1jaGlsZCgyKSB7XG4gIHRvcDogMTByZW07XG59XG5cbnNlY3Rpb246bnRoLWNoaWxkKDMpIHtcbiAgdG9wOiAyMHJlbTtcbn1cblxuLmxvcmVtIHtcbiAgLS13aWR0aENoOiA2MDtcbiAgLS10aW1lUGVyTGluZTogNnM7XG59XG5cbiosXG4qOjpiZWZvcmUsXG4qOjphZnRlciB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogNjIuNSU7XG4gIHNjcm9sbC1iZWhhdmlvcjogc21vb3RoO1xufVxuXG5ib2R5IHtcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiLCBzYW5zLXNlcmlmO1xuICBmb250LWZhbWlseTogXCJPcmJpdHJvblwiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDEuNnJlbTtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5oZWFkZXIge1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCByZ2JhKDExLCAzMSwgNTgsIDAuODUpIDM5LjA2JSwgcmdiYSgxNCwgMjYsIDQ4LCAwLjg1KSA5OC40NCUpLCB1cmwoLi4vLi4vZGlzdC9pbWcvaGVyby1iZy5wbmcpO1xuICBoZWlnaHQ6IDEwMHZoO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDtcbn1cbi5oZWFkZXJfX2ljb25zIHtcbiAgZGlzcGxheTogbm9uZTtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgcGFkZGluZy1yaWdodDogMWVtO1xufVxuLmhlYWRlcl9faWNvbnMgYSB7XG4gIGNvbG9yOiAjZmZmO1xuICBwYWRkaW5nOiAxLjJlbSAwIDAgMWVtO1xufVxuLmhlYWRlcl9faWNvbnMgaSB7XG4gIGZvbnQtc2l6ZTogMi4ycmVtO1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzO1xufVxuLmhlYWRlcl9faWNvbnMgaTpob3ZlciB7XG4gIGNvbG9yOiAjMDQ4N0RCO1xufVxuLmhlYWRlcl9fdG9wIHtcbiAgcGFkZGluZy10b3A6IDJlbTtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBhbGlnbi1pdGVtczogYmFzZWxpbmU7XG59XG4uaGVhZGVyX190b3AtYnRuIHtcbiAgZm9udC1zaXplOiAyLjdyZW07XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGJvcmRlcjogbm9uZTtcbiAgY29sb3I6ICNmZmY7XG4gIHotaW5kZXg6IDEwMDtcbn1cbi5oZWFkZXJfX3RvcC1sb2dvIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmb250LWZhbWlseTogXCJPcmJpdHJvblwiO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogI2ZmZjtcbn1cbi5oZWFkZXJfX3RvcC1sb2dvIGgxLCAuaGVhZGVyX190b3AtbG9nbyBpIHtcbiAgZm9udC1zaXplOiAxLjhyZW07XG59XG4uaGVhZGVyX190b3AtbG9nbyBpIHtcbiAgcGFkZGluZy1yaWdodDogMC41ZW07XG59XG4uaGVhZGVyX19ib3R0b20ge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA5MHZoO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiLCBzYW5zLXNlcmlmO1xufVxuLmhlYWRlcl9fYm90dG9tLWhlYWRpbmcge1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXNpemU6IDMuNnJlbTtcbn1cbi5oZWFkZXJfX2JvdHRvbS10ZXh0IHtcbiAgY29sb3I6ICNmZmY7XG4gIHBhZGRpbmc6IDJlbSAwO1xuICBmb250LXNpemU6IDJyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5oZWFkZXJfX2JvdHRvbS1idG4ge1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBib3JkZXI6IDNweCAjZmZmIHNvbGlkO1xuICBwYWRkaW5nOiAwLjRlbSAyZW07XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjNzLCBjb2xvciAwLjNzO1xufVxuLmhlYWRlcl9fYm90dG9tLWJ0bjpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGNvbG9yOiAjNTI1MDUwO1xufVxuLmhlYWRlcl9fYXJyb3dzIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDUlO1xuICByaWdodDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gIGZvbnQtc2l6ZTogM3JlbTtcbiAgYW5pbWF0aW9uOiBhcnJvd3RyYW5zIDEuNXMgaW5maW5pdGU7XG59XG5Aa2V5ZnJhbWVzIGFycm93dHJhbnMge1xuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDVweCk7XG4gIH1cbiAgNTAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTVweCk7XG4gIH1cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDVweCk7XG4gIH1cbn1cblxuLm5hdi1tb2JpbGUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMEIxRjNBO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGVhc2UtaW47XG59XG4ubmF2LW1vYmlsZS0tYWN0aXZlIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xufVxuLm5hdi1tb2JpbGVfX2xpc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuLm5hdi1tb2JpbGVfX2xpc3QtaXRlbSB7XG4gIGZvbnQtc2l6ZTogMy4ycmVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDAuN2VtIDA7XG59XG5cbi5uYXYtZGVza3RvcCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4ubmF2LWRlc2t0b3BfX2xpc3QtaXRlbSB7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXNpemU6IDJyZW07XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgcGFkZGluZzogMC41ZW0gMC43ZW07XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmFib3V0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJCMkEyQTtcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDEuNnJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLmFib3V0X190ZXh0IHtcbiAgcGFkZGluZy1ib3R0b206IDEuNWVtO1xufVxuLmFib3V0IGkge1xuICBmb250LXNpemU6IDEwcmVtO1xuICBwYWRkaW5nLXRvcDogMC4zZW07XG59XG5cbi5za2lsbHMge1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCByZ2JhKDY3LCA2NywgNjcsIDAuOTUpIDM5LjA2JSwgcmdiYSg2OCwgNjgsIDY4LCAwLjk1KSA5OC40NCUpLCB1cmwoLi4vLi4vZGlzdC9pbWcvc2tpbGxzLWJnLnBuZyk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDtcbn1cbi5za2lsbHNfX2JveGVzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjY1KTtcbiAgYm9yZGVyLXJhZGl1czogN3B4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBwYWRkaW5nOiAzZW0gMmVtO1xufVxuLnNraWxsc19fYm94IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcbiAgYm9yZGVyLXJhZGl1czogN3B4O1xuICBwYWRkaW5nOiAxZW0gMS41ZW07XG4gIG1hcmdpbjogMC41ZW0gMDtcbiAgZm9udC1zaXplOiAyLjJyZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiLCBzYW5zLXNlcmlmO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRyYW5zaXRpb246IDAuM3MgdHJhbnNmb3JtO1xufVxuLnNraWxsc19fYm94OmhvdmVyIHtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjA1KTtcbn1cblxuLnByb2plY3RzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzUyNTA1MDtcbn1cbi5wcm9qZWN0c19fc3VidGl0bGUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDdweDtcbiAgcGFkZGluZzogMC44ZW0gMS4yZW07XG4gIG1hcmdpbjogMmVtIDAgMC41ZW0gMDtcbiAgZm9udC1zaXplOiAxLjhyZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIiwgc2Fucy1zZXJpZjtcbn1cbi5wcm9qZWN0c19fYm94ZXMge1xuICBwYWRkaW5nOiAyLjVlbSAwZW0gNGVtIDA7XG59XG4ucHJvamVjdHNfX2JveCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiAyNjBweDtcbiAgbWF4LXdpZHRoOiA0MTBweDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBlcnNwZWN0aXZlOiA4MDBweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBqdXN0aWZ5LXNlbGY6IGNlbnRlcjtcbn1cbi5wcm9qZWN0c19fYm94LXRleHQge1xuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMi4ycmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBwYWRkaW5nOiAwLjVlbSAwLjJlbTtcbn1cbi5wcm9qZWN0c19fYm94OmhvdmVyIC5wcm9qZWN0c19fYm94LWJlaGluZCB7XG4gIHRyYW5zZm9ybTogcm90YXRlKDApO1xuICBvcGFjaXR5OiAxO1xufVxuLnByb2plY3RzX19ib3g6aG92ZXIgLnByb2plY3RzX19ib3gtaW1nIHtcbiAgdHJhbnNmb3JtOiByb3RhdGVZKC0xODBkZWcpO1xuICBvcGFjaXR5OiAxO1xufVxuLnByb2plY3RzX19ib3g6aG92ZXIgLnByb2plY3RzX19ib3gtYnRuIHtcbiAgdHJhbnNmb3JtOiByb3RhdGVZKDE4MGRlZyk7XG4gIG9wYWNpdHk6IDE7XG4gIHRyYW5zaXRpb246IDAuOHM7XG59XG4ucHJvamVjdHNfX2JveC1pbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB0cmFuc2l0aW9uOiAwLjhzO1xufVxuLnByb2plY3RzX19ib3gtaW1nLS1vbmUge1xuICBiYWNrZ3JvdW5kOiB1cmwoLi4vLi4vZGlzdC9pbWcvcHJvamVjdHMxLnBuZyk7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xufVxuLnByb2plY3RzX19ib3gtaW1nLS10d28ge1xuICBiYWNrZ3JvdW5kOiB1cmwoLi4vLi4vZGlzdC9pbWcvcHJvamVjdHMyLnBuZyk7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xufVxuLnByb2plY3RzX19ib3gtaW1nLS10aHJlZSB7XG4gIGJhY2tncm91bmQ6IHVybCguLi8uLi9kaXN0L2ltZy9wcm9qZWN0czMucG5nKTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG59XG4ucHJvamVjdHNfX2JveC1pbWctLWZvdXIge1xuICBiYWNrZ3JvdW5kOiB1cmwoLi4vLi4vZGlzdC9pbWcvcHJvamVjdHM0LnBuZyk7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xufVxuLnByb2plY3RzX19ib3gtaW1nLS1maXZlIHtcbiAgYmFja2dyb3VuZDogdXJsKC4uLy4uL2Rpc3QvaW1nL3Byb2plY3RzNS5wbmcpO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbn1cbi5wcm9qZWN0c19fYm94LWltZy0tc2l4IHtcbiAgYmFja2dyb3VuZDogdXJsKC4uLy4uL2Rpc3QvaW1nL3Byb2plY3RzNi5wbmcpO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbn1cbi5wcm9qZWN0c19fYm94LWltZy0tc2V2ZW4ge1xuICBiYWNrZ3JvdW5kOiB1cmwoLi4vLi4vZGlzdC9pbWcvcHJvamVjdHM3LnBuZyk7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xufVxuLnByb2plY3RzX19ib3gtaW1nLS1laWdodCB7XG4gIGJhY2tncm91bmQ6IHVybCguLi8uLi9kaXN0L2ltZy9wcm9qZWN0czgucG5nKTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG59XG4ucHJvamVjdHNfX2JveC1pbWctLW5pbmUge1xuICBiYWNrZ3JvdW5kOiB1cmwoLi4vLi4vZGlzdC9pbWcvcHJvamVjdHM5LnBuZyk7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xufVxuLnByb2plY3RzX19ib3gtYnRuIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDEwcHg7XG4gIHJpZ2h0OiAxMHB4O1xuICBwYWRkaW5nOiAxZW07XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGJvcmRlcjogbm9uZTtcbiAgY29sb3I6ICNmZmY7XG4gIGZvbnQtc2l6ZTogMi42cmVtO1xuICB0ZXh0LXNoYWRvdzogMXB4IDFweCA1cHggYmxhY2s7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgei1pbmRleDogMTA7XG4gIHRyYW5zaXRpb246IDAuOHM7XG59XG4ucHJvamVjdHNfX2JveC1iZWhpbmQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgYm90dG9tOiAwO1xuICByaWdodDogMDtcbiAgbGVmdDogMDtcbiAgcGFkZGluZzogM2VtO1xuICBiYWNrZ3JvdW5kOiAjZjJmMGYwO1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCAjZjVmN2ZhIDAlLCAjYzNjZmUyIDEwMCUpO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdHJhbnNpdGlvbjogMC44cztcbiAgb3BhY2l0eTogMDtcbiAgdHJhbnNmb3JtOiByb3RhdGVZKC0xODBkZWcpO1xuICBjb2xvcjogIzAwMDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4ucHJvamVjdHNfX2JveC1saW5rIHtcbiAgcGFkZGluZzogMC41ZW0gMDtcbiAgY29sb3I6ICMwMDA7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgZm9udC1zaXplOiAyLjJyZW07XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIiwgc2Fucy1zZXJpZjtcbn1cbi5wcm9qZWN0c19fYm94LWxpbms6aG92ZXIge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cblxuLmZvb3RlciB7XG4gIGJhY2tncm91bmQ6ICMyRTJFMkU7XG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIiwgc2Fucy1zZXJpZjtcbn1cbi5mb290ZXIgLnRocmVlLWNvbHVtbnMge1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgyLCAxZnIpO1xufVxuLmZvb3Rlcl9fYm94ZXMgLnRocmVlLWNvbHVtbnNfX2NvbHVtbi0tdHdvIHtcbiAgbWF4LXdpZHRoOiA0MDBweDtcbiAgd2lkdGg6IDEwMCU7XG59XG4uZm9vdGVyX19ib3hlcyAudGhyZWUtY29sdW1uc19fY29sdW1uLS10aHJlZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4uZm9vdGVyX19ib3gge1xuICBqdXN0aWZ5LXNlbGY6IGNlbnRlcjtcbn1cbi5mb290ZXJfX2JveC1oZWFkaW5nIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1zaXplOiAyLjRyZW07XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIHBhZGRpbmctYm90dG9tOiAxLjVlbTtcbn1cbi5mb290ZXJfX2JveC1yb3cge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwYWRkaW5nOiAwLjVlbSAwO1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6ICNmZmY7XG59XG4uZm9vdGVyX19ib3gtcm93OmhvdmVyIHtcbiAgY29sb3I6ICMwNDg3REI7XG59XG4uZm9vdGVyX19ib3gtcm93IGkge1xuICBmb250LXNpemU6IDIuNnJlbTtcbiAgcGFkZGluZy1yaWdodDogMC44ZW07XG59XG4uZm9vdGVyX19ib3gtdGV4dCB7XG4gIHBhZGRpbmc6IDAuNWVtIDA7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkge1xuICAuaGVhZGVyIGgxLCAuaGVhZGVyIGkge1xuICAgIGZvbnQtc2l6ZTogMi41cmVtO1xuICB9XG4gIC5oZWFkZXJfX2JvdHRvbS1oZWFkaW5nIHtcbiAgICBmb250LXNpemU6IDVyZW07XG4gIH1cbiAgLmhlYWRlcl9fYm90dG9tLXRleHQge1xuICAgIGZvbnQtc2l6ZTogMi44cmVtO1xuICB9XG4gIC5oZWFkZXJfX2JvdHRvbS1idG4ge1xuICAgIHBhZGRpbmc6IDAuN2VtIDNlbTtcbiAgICBmb250LXdlaWdodDogNjAwO1xuICB9XG5cbiAgLnNraWxsc19fYm94ZXMge1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB9XG4gIC5za2lsbHNfX2JveCB7XG4gICAgbWFyZ2luOiAwLjVlbSAwLjVlbTtcbiAgICBmb250LXNpemU6IDIuNnJlbTtcbiAgICBwYWRkaW5nOiAwLjVlbSAxZW07XG4gIH1cblxuICAucHJvamVjdHNfX3N1YnRpdGxlIHtcbiAgICBmb250LXNpemU6IDIuNHJlbTtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIHBhZGRpbmc6IDAuNWVtIDAuOGVtO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmhlYWRlcl9fYm90dG9tLWhlYWRpbmcge1xuICAgIGZvbnQtc2l6ZTogNi43cmVtO1xuICB9XG4gIC5oZWFkZXJfX2JvdHRvbS10ZXh0IHtcbiAgICBmb250LXNpemU6IDNyZW07XG4gIH1cblxuICAuZm9vdGVyIC50aHJlZS1jb2x1bW5zIHtcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgxLCAxZnIpO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLmhlYWRlcl9faWNvbnMge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gIH1cbiAgLmhlYWRlcl9fYm90dG9tLWhlYWRpbmcge1xuICAgIGZvbnQtc2l6ZTogOHJlbTtcbiAgICBtYXgtd2lkdGg6IDkwMHB4O1xuICB9XG4gIC5oZWFkZXJfX2JvdHRvbS10ZXh0IHtcbiAgICBmb250LXNpemU6IDMuOHJlbTtcbiAgICBwYWRkaW5nOiAxZW0gMDtcbiAgfVxuICAuaGVhZGVyX19ib3R0b20tYnRuIHtcbiAgICBwYWRkaW5nOiAwLjRlbSAyLjJlbTtcbiAgICBmb250LXdlaWdodDogNjAwO1xuICAgIGZvbnQtc2l6ZTogMi40cmVtO1xuICB9XG4gIC5oZWFkZXJfX3RvcCB7XG4gICAgcGFkZGluZy10b3A6IDAuNWVtO1xuICB9XG4gIC5oZWFkZXJfX3RvcC1idG4ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cblxuICAubmF2LWRlc2t0b3Age1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG5cbiAgLmFib3V0IHtcbiAgICBwYWRkaW5nLWJvdHRvbTogNGVtO1xuICB9XG4gIC5hYm91dF9fdGV4dCB7XG4gICAgcGFkZGluZy1ib3R0b206IDJlbTtcbiAgICBmb250LXNpemU6IDEuOHJlbTtcbiAgfVxuICAuYWJvdXQgaSB7XG4gICAgZm9udC1zaXplOiAxNXJlbTtcbiAgfVxuXG4gIC5za2lsbHNfX2JveCB7XG4gICAgbWFyZ2luOiAwLjVlbSAwLjVlbTtcbiAgICBmb250LXNpemU6IDMuNnJlbTtcbiAgICBwYWRkaW5nOiAwLjJlbSAwLjNlbTtcbiAgfVxuXG4gIC5wcm9qZWN0c19fc3VidGl0bGUge1xuICAgIHdpZHRoOiBmaXQtY29udGVudDtcbiAgfVxuXG4gIC5mb290ZXIge1xuICAgIHBhZGRpbmc6IDVlbSAwO1xuICB9XG4gIC5mb290ZXIgLnRocmVlLWNvbHVtbnNfX2NvbHVtbi0tdGhyZWUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xuICB9XG4gIC5mb290ZXJfX2JveCB7XG4gICAganVzdGlmeS1zZWxmOiBmbGV4LXN0YXJ0O1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5oZWFkZXJfX3RvcC1sb2dvIGgxLCAuaGVhZGVyX190b3AtbG9nbyBpIHtcbiAgICBmb250LXNpemU6IDMuMnJlbTtcbiAgfVxuICAuaGVhZGVyX19ib3R0b20taGVhZGluZyB7XG4gICAgZm9udC1zaXplOiA5cmVtO1xuICAgIG1heC13aWR0aDogOTkycHg7XG4gIH1cbiAgLmhlYWRlcl9fYm90dG9tLXRleHQge1xuICAgIGZvbnQtc2l6ZTogNC44cmVtO1xuICB9XG5cbiAgLm5hdi1kZXNrdG9wX19saXN0LWl0ZW0ge1xuICAgIGZvbnQtc2l6ZTogMi42cmVtO1xuICAgIHBhZGRpbmc6IDAuNWVtIDAuN2VtO1xuICB9XG59IiwiJG1haW4tY29sb3I6ICNmZmY7XHJcbiRhY2NlbnQtY29sb3I6ICMwNDg3REI7XHJcbiRhYm91dC1iZzogIzJCMkEyQTtcclxuJHNraWxscy1iZzogIzUyNTA1MDtcclxuJGZvb3Rlci1iZzogIzJFMkUyRTsiLCIvLyBBTklNQVRFRCBURVhUXHJcbkBrZXlmcmFtZXMgZ3JvdyB7XHJcbiAgICAwJSB7IG1heC1oZWlnaHQ6IHZhcigtLWxpbmVIZWlnaHQpOyB9XHJcbiAgICAxMDAlIHsgbWF4LWhlaWdodDogY2FsYyh2YXIoLS1saW5lSGVpZ2h0KSAqIHZhcigtLWxpbmVzKSk7IH1cclxuICB9XHJcbiAgXHJcbiAgQGtleWZyYW1lcyBjYXJyaWFnZVJldHVybiB7XHJcbiAgICAwJSB7IHRvcDogMDsgfVxyXG4gICAgMTAwJSB7IHRvcDogY2FsYyh2YXIoLS1saW5lSGVpZ2h0KSAqIHZhcigtLWxpbmVzKSk7IH1cclxuICB9XHJcbiAgXHJcbiAgQGtleWZyYW1lcyB0eXBlIHtcclxuICAgIDAlIHsgd2lkdGg6IDEwMCU7IH1cclxuICAgIDEwMCUgeyB3aWR0aDogMCU7IH1cclxuICB9XHJcbiAgXHJcbiAgQGtleWZyYW1lcyBjYXJldCB7XHJcbiAgICAwJSB7IGNvbG9yOiB2YXIoLS1iZ0NvbG9yKTsgfVxyXG4gICAgMTAwJSB7IGNvbG9yOiBibGFjazsgfVxyXG4gIH1cclxuICBcclxuICAudHlwZXdyaXRlciB7XHJcbiAgICAtLWJnQ29sb3I6IG5vbmU7XHJcbiAgICAtLWxpbmVzOiA4MDA7XHJcbiAgICAtLWxpbmVIZWlnaHQ6IDExLjdyZW07XHJcbiAgICAtLXRpbWVQZXJMaW5lOiA1cztcclxuICAgIC0td2lkdGhDaDogMTk7XHJcbiAgICAtLXdpZHRoOiBjYWxjKHZhcigtLXdpZHRoQ2gpICogMWNoKTtcclxuICAgIC8qIGRvIG5vdCB0b3VjaCB0aGUgdGltZSBwcm9wZXJ0eSEhISAqL1xyXG4gICAgLS10aW1lOiBjYWxjKHZhcigtLWxpbmVzKSAqIHZhcigtLXRpbWVQZXJMaW5lKSk7XHJcbiAgICBhbmltYXRpb246IGdyb3cgdmFyKC0tdGltZSkgc3RlcHModmFyKC0tbGluZXMpKTtcclxuICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xyXG4gICAgYmFja2dyb3VuZDogdmFyKC0tYmdDb2xvcik7ICBcclxuICAgIGxpbmUtaGVpZ2h0OiB2YXIoLS1saW5lSGVpZ2h0KTtcclxuICAgIG1heC1oZWlnaHQ6IHZhcigtLWxpbmVIZWlnaHQpO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHdpZHRoOiB2YXIoLS13aWR0aCk7XHJcbiAgICAvKiB3b3JkLWJyZWFrOiBicmVhay1hbGw7ICovXHJcbiAgfVxyXG4gIFxyXG4gIC50eXBld3JpdGVyOjpiZWZvcmUge1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIGFuaW1hdGlvbjogXHJcbiAgICAgIHR5cGUgdmFyKC0tdGltZVBlckxpbmUpIGxpbmVhciBpbmZpbml0ZSwgXHJcbiAgICAgIGNhcnJpYWdlUmV0dXJuIHZhcigtLXRpbWUpIHN0ZXBzKHZhcigtLWxpbmVzKSkgdmFyKC0tbGluZXMpLFxyXG4gICAgICBjYXJldCAwLjVzIHN0ZXBzKDIpIGluZmluaXRlO1xyXG4gICAgYmFja2dyb3VuZDogdmFyKC0tYmdDb2xvcik7XHJcbiAgICBib3JkZXItbGVmdDogMnB4IHNvbGlkO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgaGVpZ2h0OiAxMXJlbTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIFxyXG4gIFxyXG4gIFxyXG4gIC50eXBld3JpdGVyLmJpZy1jYXJldDo6YmVmb3JlIHtcclxuICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAwLjVjaDtcclxuICB9XHJcbiAgXHJcbiAgLnR5cGV3cml0ZXIubW9ub3NwYWNlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuICBcclxuICAudHlwZXdyaXRlci5tb25vc3BhY2U6OmJlZm9yZSB7XHJcbiAgICBhbmltYXRpb246IFxyXG4gICAgICB0eXBlIHZhcigtLXRpbWVQZXJMaW5lKSBzdGVwcyh2YXIoLS13aWR0aENoKSkgaW5maW5pdGUsIFxyXG4gICAgICBjYXJyaWFnZVJldHVybiB2YXIoLS10aW1lKSBzdGVwcyh2YXIoLS1saW5lcykpIHZhcigtLWxpbmVzKSxcclxuICAgICAgY2FyZXQgMC41cyBzdGVwcygyKSBpbmZpbml0ZTtcclxuICB9XHJcbiAgXHJcbiAgLyogREVNTyAqL1xyXG4gIHNlY3Rpb24ge1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcGFkZGluZzogMXJlbTtcclxuICAgIC8vIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMXJlbTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuICBcclxuICBzZWN0aW9uOm50aC1jaGlsZCgyKSB7IHRvcDogMTByZW07IH1cclxuICBzZWN0aW9uOm50aC1jaGlsZCgzKSB7IHRvcDogMjByZW07IH1cclxuICBcclxuICAubG9yZW0ge1xyXG4gICAgLS13aWR0aENoOiA2MDtcclxuICAgIC0tdGltZVBlckxpbmU6IDZzO1xyXG4gIH1cclxuICAiLCJAaW1wb3J0ICcuL2NvbG9ycyc7XHJcbkBpbXBvcnQgJy4vY29tcG9uZW50cyc7XHJcbkBpbXBvcnQgJy4vYW5pbWF0ZWQtdGV4dCc7XHJcblxyXG5cclxuKixcclxuKjo6YmVmb3JlLFxyXG4qOjphZnRlciB7XHJcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxufVxyXG5cclxuaHRtbCB7XHJcbiAgICBmb250LXNpemU6IDYyLjUlO1xyXG4gICAgc2Nyb2xsLWJlaGF2aW9yOiBzbW9vdGg7XHJcbn1cclxuXHJcbmJvZHkge1xyXG4gICAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0Jywgc2Fucy1zZXJpZjtcclxuICAgIGZvbnQtZmFtaWx5OiAnT3JiaXRyb24nLCBzYW5zLXNlcmlmO1xyXG4gICAgZm9udC1zaXplOiAxLjZyZW07XHJcbiAgICBjb2xvcjogJG1haW4tY29sb3I7XHJcbn1cclxuXHJcbi8vIEhFQURFUlxyXG5cclxuLmhlYWRlciAge1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDE4MGRlZywgcmdiYSgxMSwgMzEsIDU4LCAwLjg1KSAzOS4wNiUsIHJnYmEoMTQsIDI2LCA0OCwgMC44NSkgOTguNDQlKSwgdXJsKC4uLy4uL2Rpc3QvaW1nL2hlcm8tYmcucG5nKTtcclxuICAgIGhlaWdodDogMTAwdmg7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGJhY2tncm91bmQtYXR0YWNobWVudDogZml4ZWQ7XHJcblxyXG4gICAgJl9faWNvbnMge1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxZW07XHJcbiAgICAgICAgXHJcbiAgICAgICAgYSB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkbWFpbi1jb2xvcjtcclxuICAgICAgICAgICAgcGFkZGluZzogMS4yZW0gMCAwIDFlbTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMi4ycmVtO1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzO1xyXG5cclxuICAgICAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogJGFjY2VudC1jb2xvcjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX190b3Age1xyXG4gICAgICAgIHBhZGRpbmctdG9wOiAyZW07XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGJhc2VsaW5lO1xyXG5cclxuICAgICAgICAmLWJ0biB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMi43cmVtO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiBub25lO1xyXG4gICAgICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkbWFpbi1jb2xvcjtcclxuICAgICAgICAgICAgei1pbmRleDogMTAwO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi1sb2dvIHtcclxuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAgICBmb250LWZhbWlseTogJ09yYml0cm9uJztcclxuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICAgICAgY29sb3I6ICRtYWluLWNvbG9yO1xyXG4gICAgXHJcbiAgICAgICAgICAgIGgxLCBpIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS44cmVtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGkge1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMC41ZW07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IFxyXG4gICAgfVxyXG5cclxuICAgICZfX2JvdHRvbSB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgaGVpZ2h0OiA5MHZoO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XHJcblxyXG4gICAgICAgICYtaGVhZGluZyB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkbWFpbi1jb2xvcjtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDMuNnJlbTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYtdGV4dCB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkbWFpbi1jb2xvcjtcclxuICAgICAgICAgICAgcGFkZGluZzogMmVtIDA7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmLWJ0biB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkbWFpbi1jb2xvcjtcclxuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgICAgICBib3JkZXI6IDNweCAkbWFpbi1jb2xvciBzb2xpZDtcclxuICAgICAgICAgICAgcGFkZGluZzogMC40ZW0gMmVtO1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC4zcywgY29sb3IgMC4zcztcclxuXHJcbiAgICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJG1haW4tY29sb3I7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogIzUyNTA1MDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19hcnJvd3Mge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBib3R0b206IDUlO1xyXG4gICAgICAgIHJpZ2h0OiA1MCU7XHJcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogM3JlbTtcclxuICAgICAgICBhbmltYXRpb246IGFycm93dHJhbnMgMS41cyBpbmZpbml0ZTtcclxuICAgIH1cclxuXHJcbiAgICBAa2V5ZnJhbWVzIGFycm93dHJhbnMge1xyXG4gICAgICAgIDAlIHtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDVweCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIDUwJSB7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNXB4KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgMTAwJSB7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSg1cHgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG59XHJcblxyXG4vLyBOQVYtTU9CSUxFIFxyXG5cclxuLm5hdi1tb2JpbGUge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzBCMUYzQTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTtcclxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGVhc2UtaW47XHJcblxyXG4gICAgJi0tYWN0aXZlIHtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fbGlzdCB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG5cclxuICAgICAgICAmLWl0ZW0ge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDMuMnJlbTtcclxuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgICAgICBjb2xvcjogJG1haW4tY29sb3I7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgcGFkZGluZzogMC43ZW0gMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vIE5BVi1ERVNLVE9QIFxyXG5cclxuLm5hdi1kZXNrdG9wIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcblxyXG4gICAgJl9fbGlzdCB7XHJcblxyXG4gICAgICAgICYtaXRlbSB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkbWFpbi1jb2xvcjtcclxuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDAuNWVtIDAuN2VtO1xyXG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbn1cclxuXHJcbi8vIEFCT1VUIFxyXG5cclxuLmFib3V0IHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRhYm91dC1iZztcclxuICAgIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XHJcbiAgICBmb250LXNpemU6IDEuNnJlbTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHJcbiAgICAmX190ZXh0IHtcclxuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMS41ZW07XHJcbiAgICB9XHJcbiAgICBpIHtcclxuICAgICAgICBmb250LXNpemU6IDEwcmVtO1xyXG4gICAgICAgIHBhZGRpbmctdG9wOiAwLjNlbTtcclxuICAgIH1cclxufVxyXG5cclxuLy8gU0tJTExTIFxyXG5cclxuLnNraWxscyB7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCByZ2JhKDY3LCA2NywgNjcsIDAuOTUpIDM5LjA2JSwgcmdiYSg2OCwgNjgsIDY4LCAwLjk1KSA5OC40NCUpLCB1cmwoLi4vLi4vZGlzdC9pbWcvc2tpbGxzLWJnLnBuZyk7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDtcclxuXHJcbiAgICAmX19ib3hlcyB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjY1KTtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA3cHg7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIHBhZGRpbmc6IDNlbSAyZW07XHJcbiAgICB9XHJcbiAgICAmX19ib3gge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogN3B4O1xyXG4gICAgICAgIHBhZGRpbmc6IDFlbSAxLjVlbTtcclxuICAgICAgICBtYXJnaW46IDAuNWVtIDA7XHJcbiAgICAgICAgZm9udC1zaXplOiAyLjJyZW07XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICB0cmFuc2l0aW9uOiAwLjNzIHRyYW5zZm9ybTtcclxuXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wNSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4vLyBQUk9KRUNUU1xyXG5cclxuLnByb2plY3RzIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRza2lsbHMtYmc7XHJcblxyXG4gICAgJl9fc3VidGl0bGUge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDA7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDdweDtcclxuICAgICAgICBwYWRkaW5nOiAwLjhlbSAxLjJlbTtcclxuICAgICAgICBtYXJnaW46IDJlbSAwIDAuNWVtIDA7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjhyZW07XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XHJcbiAgICB9XHJcbiAgICAmX19ib3hlcyB7XHJcbiAgICAgICAgcGFkZGluZzogMi41ZW0gMGVtIDRlbSAwO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2JveCB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGhlaWdodDogMjYwcHg7XHJcbiAgICAgICAgbWF4LXdpZHRoOiA0MTBweDtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBwZXJzcGVjdGl2ZTogODAwcHg7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xyXG5cclxuICAgICAgICAmLXRleHQge1xyXG4gICAgICAgICAgICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDIuMnJlbTtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgICAgICAgICAgcGFkZGluZzogMC41ZW0gMC4yZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmOmhvdmVyIC5wcm9qZWN0c19fYm94LWJlaGluZCB7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDApO1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJjpob3ZlciAucHJvamVjdHNfX2JveC1pbWcge1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZVkoLTE4MGRlZyk7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmOmhvdmVyIC5wcm9qZWN0c19fYm94LWJ0biB7XHJcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZVkoMTgwZGVnKTtcclxuICAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgICB0cmFuc2l0aW9uOiAuOHM7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLWltZyB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IC44cztcclxuXHJcbiAgICAgICAgICAgICYtLW9uZSB7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoLi4vLi4vZGlzdC9pbWcvcHJvamVjdHMxLnBuZyk7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICYtLXR3byB7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoLi4vLi4vZGlzdC9pbWcvcHJvamVjdHMyLnBuZyk7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICYtLXRocmVlIHtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHVybCguLi8uLi9kaXN0L2ltZy9wcm9qZWN0czMucG5nKTtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJi0tZm91ciB7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoLi4vLi4vZGlzdC9pbWcvcHJvamVjdHM0LnBuZyk7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICYtLWZpdmUge1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogdXJsKC4uLy4uL2Rpc3QvaW1nL3Byb2plY3RzNS5wbmcpO1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAmLS1zaXgge1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogdXJsKC4uLy4uL2Rpc3QvaW1nL3Byb2plY3RzNi5wbmcpO1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAmLS1zZXZlbiB7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoLi4vLi4vZGlzdC9pbWcvcHJvamVjdHM3LnBuZyk7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICYtLWVpZ2h0IHtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHVybCguLi8uLi9kaXN0L2ltZy9wcm9qZWN0czgucG5nKTtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJi0tbmluZSB7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoLi4vLi4vZGlzdC9pbWcvcHJvamVjdHM5LnBuZyk7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgICYtYnRuIHtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICB0b3A6IDEwcHg7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAxMHB4O1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAxZW07XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IG5vbmU7XHJcbiAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMi42cmVtO1xyXG4gICAgICAgICAgICB0ZXh0LXNoYWRvdzogMXB4IDFweCA1cHggYmxhY2s7XHJcbiAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICAgICAgei1pbmRleDogMTA7XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IC44cztcclxuICAgICAgICB9XHJcbiAgICAgICAgJi1iZWhpbmQge1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgICAgICByaWdodDogMDtcclxuICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgcGFkZGluZzogM2VtO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZjJmMGYwO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCAjZjVmN2ZhIDAlLCAjYzNjZmUyIDEwMCUpO1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgdHJhbnNpdGlvbjogLjhzO1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZVkoLTE4MGRlZyk7XHJcbiAgICAgICAgICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICB9XHJcbiAgICAgICAgJi1saW5rIHtcclxuICAgICAgICAgICAgcGFkZGluZzogMC41ZW0gMDtcclxuICAgICAgICAgICAgY29sb3I6ICMwMDA7XHJcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAyLjJyZW07XHJcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XHJcblxyXG4gICAgICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4vLyBGT09URVJcclxuXHJcbi5mb290ZXIge1xyXG4gICAgYmFja2dyb3VuZDogJGZvb3Rlci1iZztcclxuICAgIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCcsIHNhbnMtc2VyaWY7XHJcblxyXG4gICAgLnRocmVlLWNvbHVtbnMge1xyXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDIsMWZyKTtcclxuICAgIH1cclxuXHJcbiAgICAmX19ib3hlcyB7XHJcbiAgICAgICAgLnRocmVlLWNvbHVtbnNfX2NvbHVtbi0tdHdvIHtcclxuICAgICAgICAgICAgbWF4LXdpZHRoOiA0MDBweDtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC50aHJlZS1jb2x1bW5zX19jb2x1bW4tLXRocmVlIHtcclxuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9fYm94IHtcclxuXHJcbiAgICAgICAganVzdGlmeS1zZWxmOiBjZW50ZXI7XHJcblxyXG4gICAgICAgICYtaGVhZGluZyB7XHJcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMi40cmVtO1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMS41ZW07XHJcbiAgICAgICAgfVxyXG4gICAgICAgICYtcm93IHtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgcGFkZGluZzogMC41ZW0gMDtcclxuICAgICAgICAgICAgdHJhbnNpdGlvbjogY29sb3IgMC4zcztcclxuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkbWFpbi1jb2xvcjtcclxuXHJcbiAgICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICRhY2NlbnQtY29sb3I7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGkge1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyLjZyZW07XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAwLjhlbTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAmLXRleHQge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAwLjVlbSAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLy8gTUVESUEgXHJcblxyXG5AbWVkaWEobWluLXdpZHRoOiA1NzZweCkge1xyXG5cclxuICAgIC5oZWFkZXIge1xyXG4gICAgICAgIGgxLCBpIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAyLjVyZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19ib3R0b20ge1xyXG4gICAgICAgICAgICAmLWhlYWRpbmcge1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiA1cmVtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICAgICAgJi10ZXh0IHtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMi44cmVtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICYtYnRuIHtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDAuN2VtIDNlbTtcclxuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAuc2tpbGxzIHtcclxuICAgICAgICBcclxuICAgICAgICAmX19ib3hlcyB7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICAgICAgICAgIGZsZXgtd3JhcDogd3JhcDtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICZfX2JveCB7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMC41ZW0gMC41ZW07XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMi42cmVtO1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAwLjVlbSAxZW07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLnByb2plY3RzIHtcclxuXHJcbiAgICAgICAgJl9fc3VidGl0bGUge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDIuNHJlbTtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgICAgICAgICAgcGFkZGluZzogMC41ZW0gMC44ZW07XHJcbiAgICAgICAgIH1cclxuXHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5AbWVkaWEobWluLXdpZHRoOiA3NjhweCkge1xyXG5cclxuICAgIC5oZWFkZXIge1xyXG4gICAgICAgICZfX2JvdHRvbSB7XHJcbiAgICAgICAgICAgICYtaGVhZGluZyB7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDYuN3JlbTtcclxuICAgICAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgICAgICYtdGV4dCB7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDNyZW07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAuZm9vdGVyIHtcclxuICAgICAgICAudGhyZWUtY29sdW1ucyB7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDEsMWZyKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5AbWVkaWEobWluLXdpZHRoOiA5OTJweCkge1xyXG4gICAgLmhlYWRlciB7XHJcblxyXG4gICAgICAgICZfX2ljb25zIHtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2JvdHRvbSB7XHJcbiAgICAgICAgICAgICYtaGVhZGluZyB7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDhyZW07XHJcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDkwMHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICAgICAgJi10ZXh0IHtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMy44cmVtO1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZzogMWVtIDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJi1idG4ge1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZzogMC40ZW0gMi4yZW07XHJcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyLjRyZW07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgJl9fdG9wIHtcclxuICAgICAgICAgICAgcGFkZGluZy10b3A6IDAuNWVtO1xyXG5cclxuICAgICAgICAgICAgJi1idG4ge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC5uYXYtZGVza3RvcCB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB9XHJcblxyXG4gICAgLmFib3V0IHtcclxuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IDRlbTtcclxuXHJcbiAgICAgICAgJl9fdGV4dCB7XHJcbiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAyZW07XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS44cmVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxNXJlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLnNraWxscyB7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJl9fYm94IHtcclxuICAgICAgICAgICAgbWFyZ2luOiAwLjVlbSAwLjVlbTtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAzLjZyZW07XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDAuMmVtIDAuM2VtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC5wcm9qZWN0cyB7XHJcbiAgICBcclxuICAgICAgICAmX19zdWJ0aXRsZSB7XHJcbiAgICAgICAgICAgIHdpZHRoOiBmaXQtY29udGVudDtcclxuICAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5mb290ZXIge1xyXG4gICAgICAgIHBhZGRpbmc6IDVlbSAwO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC50aHJlZS1jb2x1bW5zX19jb2x1bW4tLXRocmVlIHtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuXHJcbiAgICAgICAgJl9fYm94IHtcclxuICAgICAgICAgICAganVzdGlmeS1zZWxmOiBmbGV4LXN0YXJ0O1xyXG5cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxufVxyXG5cclxuXHJcbkBtZWRpYShtaW4td2lkdGg6IDEyMDBweCkge1xyXG4gICAgLmhlYWRlciB7XHJcblxyXG4gICAgICAgICZfX3RvcCB7XHJcbiAgICAgICAgICAgICYtbG9nbyB7XHJcbiAgICAgICAgICAgICAgICBoMSxpIHtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDMuMnJlbTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAmX19ib3R0b20ge1xyXG4gICAgICAgICAgICAmLWhlYWRpbmcge1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiA5cmVtO1xyXG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiA5OTJweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgICAgICYtdGV4dCB7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDQuOHJlbTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC5uYXYtZGVza3RvcCB7XHJcbiAgICAgICAgJl9fbGlzdCB7XHJcbiAgICBcclxuICAgICAgICAgICAgJi1pdGVtIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMi42cmVtO1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZzogMC41ZW0gMC43ZW07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICBcclxuICAgIH1cclxuXHJcbn1cclxuXHJcbiJdfQ== */
